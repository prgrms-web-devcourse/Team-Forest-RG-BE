buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // querydsl 추가
    id 'java'
}

group = 'com.prgrms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'
    implementation("com.google.guava:guava:31.1-jre")
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'org.apache.kafka:kafka-clients:3.2.1'

    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation group: 'com.auth0', name: 'java-jwt', version: '3.16.0'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'

}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}
// 테스트 환경에서는 spring aws cloud를 실행하지 않는다.
configurations.testImplementation {
    exclude group: 'org.springframework.cloud'
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
