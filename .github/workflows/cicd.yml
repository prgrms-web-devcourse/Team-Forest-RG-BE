name: CD using dockerhub

on:
  push:
    branches: [ "deploy" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306
          container port: 3306
          mysql version: '8.0'
          mysql database: 'rg'
          mysql user: 'dev'
          mysql password: 'dev'
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_SECRET }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: epicblueha/rg

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: latest
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SERVER_SSH_KEY }}
          known_hosts: 'asdfasffsadf'
          name: devcourse-joseph-key-pair.pem

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{secrets.SERVER_SSH_HOST}} >> ~/.ssh/known_hosts

      - name : ec2 instance docker pull & run
        run: |
          ssh -i ~/.ssh/devcourse-joseph-key-pair.pem ${{ secrets.SERVER_SSH_USER }} sudo docker rm $(docker ps -a -q) && sudo docker pull epicblueha/rg:latest && sudo docker run epicblueha/rg:latest -p 80:80 -d -e RDBMS_URL=${{ secrets.RDBMS_URL }} RDBMS_USERNAME=${{ secrets.RDBMS_USERNAME }} RDBMS_URL=${{ secrets.RDBMS_PASSWORD }}  
      
    
